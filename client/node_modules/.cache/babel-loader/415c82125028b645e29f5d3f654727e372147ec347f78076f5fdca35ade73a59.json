{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\bookread-ai\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Document, Page } from 'react-pdf'; // Correct package for PDF rendering\nimport { ReactReader } from 'react-reader'; // Working EPUB reader\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [fileUrl, setFileUrl] = useState(null); // State to hold file URL\n  const [highlightedText, setHighlightedText] = useState(''); // State for highlighted text\n  const [query, setQuery] = useState(''); // State for user query\n  const [aiResponse, setAiResponse] = useState(''); // State for AI response\n  const [error, setError] = useState(''); // State for error messages\n  const [pageNumber, setPageNumber] = useState(1); // State for page number (dynamic)\n\n  // Handle file upload and send to backend with error handling\n  const handleFileUpload = async event => {\n    const formData = new FormData();\n    formData.append('file', event.target.files[0]);\n    try {\n      const response = await fetch('http://localhost:5000/api/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      console.log('File URL:', `http://localhost:5000${data.filePath}`); // Debug log\n      setFileUrl(`http://localhost:5000${data.filePath}`);\n      setError(''); // Clear previous errors\n    } catch (error) {\n      console.error('Upload failed:', error);\n      setError('Upload failed. Check server and file format.');\n    }\n  };\n\n  // Capture highlighted text with debug\n  const handleTextSelection = () => {\n    const selection = window.getSelection();\n    if (selection.toString()) {\n      console.log('Selected text:', selection.toString()); // Debug log\n      setHighlightedText(selection.toString());\n    }\n  };\n\n  // Submit query to Gemini API\n  const handleQuerySubmit = async () => {\n    if (!highlightedText || !query) return;\n    try {\n      const response = await axios.post('http://localhost:5000/api/query', {\n        text: highlightedText,\n        prompt: query\n      });\n      setAiResponse(response.data.response);\n    } catch (error) {\n      console.error('Query failed:', error);\n      setAiResponse('Error fetching response');\n    }\n  };\n\n  // Handle page change (for PDF navigation)\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setPageNumber(1); // Start at page 1 (can be extended for navigation)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"BookRead AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf,.epub\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), \" \", fileUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      onMouseUp: handleTextSelection,\n      className: \"content-area\",\n      children: fileUrl.endsWith('.pdf') ? /*#__PURE__*/_jsxDEV(Document, {\n        file: fileUrl,\n        onLoadSuccess: onDocumentLoadSuccess,\n        onLoadError: error => setError(`PDF load error: ${error.message}`),\n        children: [/*#__PURE__*/_jsxDEV(Page, {\n          pageNumber: pageNumber,\n          width: 600,\n          height: 800\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          height: 800\n        },\n        children: /*#__PURE__*/_jsxDEV(ReactReader, {\n          url: fileUrl,\n          location: 'epubcfi(/6/2[cover]!/6)' // Initial location, adjust as needed\n          ,\n          locationChanged: loc => console.log('Location changed:', loc) // Debug location\n          ,\n          onSwipe: () => {} // Enable swipe for navigation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Highlighted Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: highlightedText || 'Select text to highlight'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"e.g., Explain this\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleQuerySubmit,\n        children: \"Ask AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"AI Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: aiResponse || 'No response yet'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"y9lZhT6t80e64oDMJTzAL4MuJlU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Document","Page","ReactReader","axios","jsxDEV","_jsxDEV","App","_s","fileUrl","setFileUrl","highlightedText","setHighlightedText","query","setQuery","aiResponse","setAiResponse","error","setError","pageNumber","setPageNumber","handleFileUpload","event","formData","FormData","append","target","files","response","fetch","method","body","data","json","console","log","filePath","handleTextSelection","selection","window","getSelection","toString","handleQuerySubmit","post","text","prompt","onDocumentLoadSuccess","numPages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","style","color","onMouseUp","endsWith","file","onLoadSuccess","onLoadError","message","width","height","url","location","locationChanged","loc","onSwipe","value","e","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Hp/OneDrive/Desktop/bookread-ai/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Document, Page } from 'react-pdf'; // Correct package for PDF rendering\nimport { ReactReader } from 'react-reader'; // Working EPUB reader\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [fileUrl, setFileUrl] = useState(null); // State to hold file URL\n  const [highlightedText, setHighlightedText] = useState(''); // State for highlighted text\n  const [query, setQuery] = useState(''); // State for user query\n  const [aiResponse, setAiResponse] = useState(''); // State for AI response\n  const [error, setError] = useState(''); // State for error messages\n  const [pageNumber, setPageNumber] = useState(1); // State for page number (dynamic)\n\n  // Handle file upload and send to backend with error handling\n  const handleFileUpload = async (event) => {\n    const formData = new FormData();\n    formData.append('file', event.target.files[0]);\n    try {\n      const response = await fetch('http://localhost:5000/api/upload', {\n        method: 'POST',\n        body: formData,\n      });\n      const data = await response.json();\n      console.log('File URL:', `http://localhost:5000${data.filePath}`); // Debug log\n      setFileUrl(`http://localhost:5000${data.filePath}`);\n      setError(''); // Clear previous errors\n    } catch (error) {\n      console.error('Upload failed:', error);\n      setError('Upload failed. Check server and file format.');\n    }\n  };\n\n  // Capture highlighted text with debug\n  const handleTextSelection = () => {\n    const selection = window.getSelection();\n    if (selection.toString()) {\n      console.log('Selected text:', selection.toString()); // Debug log\n      setHighlightedText(selection.toString());\n    }\n  };\n\n  // Submit query to Gemini API\n  const handleQuerySubmit = async () => {\n    if (!highlightedText || !query) return;\n    try {\n      const response = await axios.post('http://localhost:5000/api/query', {\n        text: highlightedText,\n        prompt: query,\n      });\n      setAiResponse(response.data.response);\n    } catch (error) {\n      console.error('Query failed:', error);\n      setAiResponse('Error fetching response');\n    }\n  };\n\n  // Handle page change (for PDF navigation)\n  const onDocumentLoadSuccess = ({ numPages }) => {\n    setPageNumber(1); // Start at page 1 (can be extended for navigation)\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>BookRead AI</h1>\n      <input type=\"file\" accept=\".pdf,.epub\" onChange={handleFileUpload} />\n      {error && <p style={{ color: 'red' }}>{error}</p>} {/* Display errors */}\n      {fileUrl && (\n        <div onMouseUp={handleTextSelection} className=\"content-area\">\n          {fileUrl.endsWith('.pdf') ? (\n            <Document\n              file={fileUrl}\n              onLoadSuccess={onDocumentLoadSuccess}\n              onLoadError={(error) => setError(`PDF load error: ${error.message}`)}\n            >\n              <Page pageNumber={pageNumber} width={600} height={800} /> {/* Fixed dimensions for visibility */}\n            </Document>\n          ) : (\n            <div style={{ width: '100%', height: 800 }}>\n              <ReactReader\n                url={fileUrl}\n                location={'epubcfi(/6/2[cover]!/6)'} // Initial location, adjust as needed\n                locationChanged={(loc) => console.log('Location changed:', loc)} // Debug location\n                onSwipe={() => {}} // Enable swipe for navigation\n              />\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"sidebar\">\n        <h3>Highlighted Text</h3>\n        <p>{highlightedText || 'Select text to highlight'}</p>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          placeholder=\"e.g., Explain this\"\n        />\n        <button onClick={handleQuerySubmit}>Ask AI</button>\n        <h3>AI Response</h3>\n        <p>{aiResponse || 'No response yet'}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}