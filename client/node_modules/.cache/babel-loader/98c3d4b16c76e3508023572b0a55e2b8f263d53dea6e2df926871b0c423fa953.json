{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\bookread-ai\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport { ReactReader } from 'react-reader';\nimport axios from 'axios';\nimport './App.css';\n\n// Add these CSS imports for react-pdf\nimport 'react-pdf/dist/Page/AnnotationLayer.css';\nimport 'react-pdf/dist/Page/TextLayer.css';\n\n// Fix for PDF.js worker - use local worker file from public folder\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = '/pdf.worker.min.mjs';\nfunction App() {\n  _s();\n  const [fileUrl, setFileUrl] = useState(null);\n  const [highlightedText, setHighlightedText] = useState('');\n  const [query, setQuery] = useState('');\n  const [aiResponse, setAiResponse] = useState('');\n  const [error, setError] = useState('');\n  const [pageNumber, setPageNumber] = useState(1);\n  const handleFileUpload = async event => {\n    const formData = new FormData();\n    formData.append('file', event.target.files[0]);\n    try {\n      const response = await fetch('http://localhost:5000/api/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      console.log('Server response:', data); // Debug\n      if (!data.filePath) throw new Error('Invalid filePath from server');\n      const fullUrl = `http://localhost:5000${data.filePath}`;\n      console.log('Full file URL:', fullUrl); // Debug\n      setFileUrl(fullUrl);\n      setError('');\n    } catch (error) {\n      console.error('Upload failed:', error);\n      setError('Upload failed. Check server and file format.');\n    }\n  };\n  const handleTextSelection = () => {\n    const selection = window.getSelection();\n    if (selection.toString()) {\n      console.log('Selected text:', selection.toString());\n      setHighlightedText(selection.toString());\n    }\n  };\n  const handleQuerySubmit = async () => {\n    if (!highlightedText || !query) return;\n    try {\n      const response = await axios.post('http://localhost:5000/api/query', {\n        text: highlightedText,\n        prompt: query\n      });\n      setAiResponse(response.data.response);\n    } catch (error) {\n      console.error('Query failed:', error);\n      setAiResponse('Error fetching response');\n    }\n  };\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setPageNumber(1);\n    console.log('PDF loaded successfully, pages:', numPages); // Debug\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"BookRead AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf,.epub\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), fileUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      onMouseUp: handleTextSelection,\n      className: \"content-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"File URL: \", fileUrl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), \" \", fileUrl.endsWith('.pdf') ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Rendering PDF...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Document, {\n          file: fileUrl,\n          onLoadSuccess: onDocumentLoadSuccess,\n          onLoadError: err => {\n            console.error('PDF load error:', err);\n            setError(`PDF load error: ${err.message}`);\n          },\n          children: /*#__PURE__*/_jsxDEV(Page, {\n            pageNumber: pageNumber,\n            width: 600,\n            height: 800,\n            renderTextLayer: true,\n            renderAnnotationLayer: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          height: 800\n        },\n        children: /*#__PURE__*/_jsxDEV(ReactReader, {\n          url: fileUrl,\n          location: 'epubcfi(/6/2[cover]!/6)',\n          locationChanged: loc => console.log('EPUB location:', loc)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Highlighted Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: highlightedText || 'Select text to highlight'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"e.g., Explain this\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleQuerySubmit,\n        children: \"Ask AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"AI Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: aiResponse || 'No response yet'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"y9lZhT6t80e64oDMJTzAL4MuJlU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Document","Page","pdfjs","ReactReader","axios","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","App","_s","fileUrl","setFileUrl","highlightedText","setHighlightedText","query","setQuery","aiResponse","setAiResponse","error","setError","pageNumber","setPageNumber","handleFileUpload","event","formData","FormData","append","target","files","response","fetch","method","body","data","json","console","log","filePath","Error","fullUrl","handleTextSelection","selection","window","getSelection","toString","handleQuerySubmit","post","text","prompt","onDocumentLoadSuccess","numPages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","style","color","onMouseUp","endsWith","file","onLoadSuccess","onLoadError","err","message","width","height","renderTextLayer","renderAnnotationLayer","url","location","locationChanged","loc","value","e","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Hp/OneDrive/Desktop/bookread-ai/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport { ReactReader } from 'react-reader';\nimport axios from 'axios';\nimport './App.css';\n\n// Add these CSS imports for react-pdf\nimport 'react-pdf/dist/Page/AnnotationLayer.css';\nimport 'react-pdf/dist/Page/TextLayer.css';\n\n// Fix for PDF.js worker - use local worker file from public folder\npdfjs.GlobalWorkerOptions.workerSrc = '/pdf.worker.min.mjs';\n\nfunction App() {\n  const [fileUrl, setFileUrl] = useState(null);\n  const [highlightedText, setHighlightedText] = useState('');\n  const [query, setQuery] = useState('');\n  const [aiResponse, setAiResponse] = useState('');\n  const [error, setError] = useState('');\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const handleFileUpload = async (event) => {\n    const formData = new FormData();\n    formData.append('file', event.target.files[0]);\n    try {\n      const response = await fetch('http://localhost:5000/api/upload', {\n        method: 'POST',\n        body: formData,\n      });\n      const data = await response.json();\n      console.log('Server response:', data); // Debug\n      if (!data.filePath) throw new Error('Invalid filePath from server');\n      const fullUrl = `http://localhost:5000${data.filePath}`;\n      console.log('Full file URL:', fullUrl); // Debug\n      setFileUrl(fullUrl);\n      setError('');\n    } catch (error) {\n      console.error('Upload failed:', error);\n      setError('Upload failed. Check server and file format.');\n    }\n  };\n\n  const handleTextSelection = () => {\n    const selection = window.getSelection();\n    if (selection.toString()) {\n      console.log('Selected text:', selection.toString());\n      setHighlightedText(selection.toString());\n    }\n  };\n\n  const handleQuerySubmit = async () => {\n    if (!highlightedText || !query) return;\n    try {\n      const response = await axios.post('http://localhost:5000/api/query', {\n        text: highlightedText,\n        prompt: query,\n      });\n      setAiResponse(response.data.response);\n    } catch (error) {\n      console.error('Query failed:', error);\n      setAiResponse('Error fetching response');\n    }\n  };\n\n  const onDocumentLoadSuccess = ({ numPages }) => {\n    setPageNumber(1);\n    console.log('PDF loaded successfully, pages:', numPages); // Debug\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>BookRead AI</h1>\n      <input type=\"file\" accept=\".pdf,.epub\" onChange={handleFileUpload} />\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {fileUrl && (\n        <div onMouseUp={handleTextSelection} className=\"content-area\">\n          <p>File URL: {fileUrl}</p> {/* Debug - remove later */}\n          {fileUrl.endsWith('.pdf') ? (\n            <div>\n              <p>Rendering PDF...</p> {/* Debug - remove later */}\n              <Document\n                file={fileUrl}\n                onLoadSuccess={onDocumentLoadSuccess}\n                onLoadError={(err) => {\n                  console.error('PDF load error:', err);\n                  setError(`PDF load error: ${err.message}`);\n                }}\n              >\n                <Page\n                  pageNumber={pageNumber}\n                  width={600}\n                  height={800}\n                  renderTextLayer={true}\n                  renderAnnotationLayer={false}\n                />\n              </Document>\n            </div>\n          ) : (\n            <div style={{ width: '100%', height: 800 }}>\n              <ReactReader\n                url={fileUrl}\n                location={'epubcfi(/6/2[cover]!/6)'}\n                locationChanged={(loc) => console.log('EPUB location:', loc)}\n              />\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"sidebar\">\n        <h3>Highlighted Text</h3>\n        <p>{highlightedText || 'Select text to highlight'}</p>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          placeholder=\"e.g., Explain this\"\n        />\n        <button onClick={handleQuerySubmit}>Ask AI</button>\n        <h3>AI Response</h3>\n        <p>{aiResponse || 'No response yet'}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}